name: Release Statically Linked Rust Binary

on:
  push:
    tags:
      - 'v*'  # Trigger on tags like 'v1.0.0'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu       # Linux (x86_64)
          - aarch64-unknown-linux-gnu      # Linux (aarch64)

    env:
      BINARY_NAME: Project

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Target for Cross Compilation
        run: rustup target add ${{ matrix.target }}

      - name: Install Dependencies (Linux Only)
        if: contains(matrix.target, 'linux')
        run: |
          sudo apt update
          sudo apt install -y gcc-aarch64-linux-gnu

      - name: Clean Build Artifacts
        run: cargo clean

      - name: Build with Cargo
        run: |
          cargo build --target ${{ matrix.target }} --release --verbose
          if [ ! -f target/${{ matrix.target }}/release/$BINARY_NAME ]; then
            echo "ERROR: Binary not found after build!"
            exit 1
          fi

      - name: Debug Build Output
        run: ls -R target/${{ matrix.target }}/release || echo "Build output not found!"

      - name: Create Release Archive
        run: |
          mkdir -p release
          cp target/${{ matrix.target }}/release/$BINARY_NAME release/
          tar -czvf ${{ matrix.target }}.tar.gz -C release $BINARY_NAME

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.tar.gz
        env:
          EGOR: ${{ secrets.EGOR }}
